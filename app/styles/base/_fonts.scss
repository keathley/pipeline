@mixin font-size($sizes, $breaks: $breakpoints) {
  @each $breakpoint, $font-size in $sizes {
    @if $breakpoint == null { font-size: $font-size; }
    @else {
      @if map-has-key($breaks, $breakpoint) {
        $breakpoint: map-get($breaks, $breakpoint);
      }
      @media (min-width: $breakpoint) {
        font-size: $font-size;
      }
    }
  }
}

@mixin line-height($heights, $breaks: $breakpoints) {
  @each $breakpoint, $height in $heights {
    @if $breakpoint == null { line-height: $height; }
    @else {
      @if map-has-key($breaks, $breakpoint) {
        $breakpoint: map-get($breaks, $breakpoint);
      }
      @media (min-width: $breakpoint) {
        line-height: $height;
      }
    }
  }
}

body {
  font-family: $base-font-family;
  font-size: $base-font-size;
  line-height: $base-line-height;
  color: $base-color;
  font-feature-settings: "kern", "liga", "pnum";
  text-rendering: optimizeLegibility;
  font-smoothing: antialiased;
}

h1,
h2,
h3,
h4 {
  margin-bottom: 0.5rem;
  line-height: ($base-line-height * 0.75);
}

h1 { font-size: $base-font-size * 2; }
h2 { font-size: $base-font-size * 1.7; }
h3 { font-size: $base-font-size * 1.2; }
h4 { font-size: $base-font-size * 1; }

blockquote {
  font-size: $base-font-size * 1.5;
}

p {
  margin: 0 0 1.25rem;
  font-weight: 200;
  @include font-size($p-font-sizes);
  @include line-height($p-line-heights);
}

p + h1,
p + h1,
p + h1,
p + h1 { margin-top: 2rem; }

a {
  text-decoration: none;
}
